{"version":3,"sources":["components/Cards/Cards.module.css","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","components/Cards/Cards.jsx","components/CopyWrite.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.jpg"],"names":["module","exports","url","fetchData","country","a","changeableUrl","axios","get","data","confirmed","recovered","deaths","lastUpdate","fetchDailyData","map","date","reportDate","total","fetchCountries","countries","name","Chart","useState","dailyData","setDailyData","useEffect","initialDailyData","fetchMyAPI","barChart","labels","datasets","label","backgroundColor","value","options","legend","display","title","text","lineChart","borderColor","fill","className","styles","container","Countries","handleCountryChange","setCountries","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","Info","Grid","spacing","justify","item","xs","md","component","Card","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","duration","separator","Date","toDateString","lastData","console","log","style","textAlign","margin","href","App","state","setState","this","Fragment","image","src","alt","Cards","CountryPicker","copywrite","CopyWrite","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.45b96c81.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const fetchData = async (country) => {\n  let changeableUrl = url;\n\n  if (country) {\n    changeableUrl = `${url}/countries/${country}`;\n  }\n\n  try {\n    const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\n\n    return { confirmed, recovered, deaths, lastUpdate };\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const fetchDailyData = async () => {\n  try {\n    const { data } = await axios.get(`${url}/daily`);\n\n    return data.map(({ confirmed, deaths, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const fetchCountries = async () => {\n  try {\n    const { data: { countries } } = await axios.get(`${url}/countries`);\n\n    return countries.map((country) => country.name);\n  } catch (error) {\n    return error;\n  }\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Line, Bar } from \"react-chartjs-2\";\n\nimport { fetchDailyData } from \"../../api\";\n\nimport styles from \"./Chart.module.css\";\n\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\n  const [dailyData, setDailyData] = useState({});\n\n  useEffect(() => {\n    const fetchMyAPI = async () => {\n      const initialDailyData = await fetchDailyData();\n\n      setDailyData(initialDailyData);\n    };\n\n    fetchMyAPI();\n  }, []);\n\n  const barChart = confirmed ? (\n    <Bar\n      data={{\n        labels: [\"Infected\", \"Recovered\", \"Deaths\"],\n        datasets: [\n          {\n            label: \"People\",\n            backgroundColor: [\n              \"rgba(0, 0, 255, 0.5)\",\n              \"rgba(0, 255, 0, 0.5)\",\n              \"rgba(255, 0, 0, 0.5)\",\n            ],\n            data: [confirmed.value, recovered.value, deaths.value],\n          },\n        ],\n      }}\n      options={{\n        legend: { display: false },\n        title: { display: true, text: `Current state in ${country}` },\n      }}\n    />\n  ) : null;\n\n  const lineChart = dailyData[0] ? (\n    <Line\n      data={{\n        labels: dailyData.map(({ date }) => date),\n        datasets: [\n          {\n            data: dailyData.map((data) => data.confirmed),\n            label: \"Infected\",\n            borderColor: \"#3333ff\",\n            fill: true,\n          },\n          {\n            data: dailyData.map((data) => data.deaths),\n            label: \"Deaths\",\n            borderColor: \"red\",\n            backgroundColor: \"rgba(255, 0, 0, 0.5)\",\n            fill: true,\n          },\n        ],\n      }}\n    />\n  ) : null;\n\n  return (\n    <div className={styles.container}>{country ? barChart : lineChart}</div>\n  );\n};\n\nexport default Chart;\n","import React, { useState, useEffect } from \"react\";\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\n\nimport { fetchCountries } from \"../../api\";\n\nimport styles from \"./CountryPicker.module.css\";\n\nconst Countries = ({ handleCountryChange }) => {\n  const [countries, setCountries] = useState([]);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setCountries(await fetchCountries());\n    };\n\n    fetchAPI();\n  }, []);\n\n  return (\n    <FormControl className={styles.formControl}>\n      <NativeSelect\n        defaultValue=\"\"\n        onChange={(e) => handleCountryChange(e.target.value)}\n      >\n        <option value=\"\">Select Country</option>\n        {countries.map((country, i) => (\n          <option key={i} value={country}>\n            {country}\n          </option>\n        ))}\n      </NativeSelect>\n    </FormControl>\n  );\n};\n\nexport default Countries;\n","import React from \"react\";\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\nimport CountUp from \"react-countup\";\nimport cx from \"classnames\";\n\nimport styles from \"./Cards.module.css\";\n\nconst Info = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\n  if (!confirmed) {\n    return \"Loading...\";\n  }\n\n  return (\n    <div className={styles.container}>\n      <Grid container spacing={3} justify=\"center\">\n        <Grid\n          item\n          xs={12}\n          md={3}\n          component={Card}\n          className={cx(styles.card, styles.infected)}\n        >\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Infected\n            </Typography>\n            <Typography variant=\"h5\" component=\"h2\">\n              <CountUp\n                start={0}\n                end={confirmed.value}\n                duration={2.75}\n                separator=\",\"\n              />\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\">\n              Number of active cases of COVID-19.\n            </Typography>\n          </CardContent>\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          md={3}\n          component={Card}\n          className={cx(styles.card, styles.recovered)}\n        >\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Recovered\n            </Typography>\n            <Typography variant=\"h5\" component=\"h2\">\n              <CountUp\n                start={0}\n                end={recovered.value}\n                duration={2.75}\n                separator=\",\"\n              />\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\">\n              Number of recoveries from COVID-19.\n            </Typography>\n          </CardContent>\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          md={3}\n          component={Card}\n          className={cx(styles.card, styles.deaths)}\n        >\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Deaths\n            </Typography>\n            <Typography variant=\"h5\" component=\"h2\">\n              <CountUp\n                start={0}\n                end={deaths.value}\n                duration={2.75}\n                separator=\",\"\n              />\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\">\n              Number of deaths caused by COVID-19.\n            </Typography>\n          </CardContent>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\nexport default Info;\n","import React from \"react\";\n\nconst Info = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\n  if (!confirmed) {\n    return \"Loading...\";\n  }\n  let lastData = new Date(lastUpdate).toDateString();\n  console.log(lastData);\n\n  return (\n    <div style={{ textAlign: \"right\", margin: \"2%\" }}>\n      <h5>Last Updated {lastData}</h5>\n      <a href=\"https://www.linkedin.com/in/himanshu-kriplani/\">\n        Himanshu Kriplani\n      </a>\n    </div>\n\n    //{/* // <div>\n    //   <h6>Last Updated {lastData}</h6>\n\n    //   <h6>\n    //     <a href=\"https://www.linkedin.com/in/himanshu-kriplani/\">\n    //       Himanshu Kriplani\n    //     </a>\n    //   </h6>\n    // </div> */}\n  );\n};\n\nexport default Info;\n","import React from \"react\";\n\nimport { Cards, CountryPicker, Chart, CopyWrite } from \"./components\";\nimport { fetchData } from \"./api/\";\nimport styles from \"./App.module.css\";\n\nimport image from \"./images/image.jpg\";\n\nclass App extends React.Component {\n  state = {\n    data: {},\n    country: \"\",\n  };\n\n  async componentDidMount() {\n    const data = await fetchData();\n\n    this.setState({ data });\n  }\n\n  handleCountryChange = async (country) => {\n    const data = await fetchData(country);\n\n    this.setState({ data, country: country });\n  };\n\n  render() {\n    const { data, country } = this.state;\n\n    return (\n      <React.Fragment>\n        <div className={styles.container}>\n          <img className={styles.image} src={image} alt=\"COVID-19\" />\n          <Cards data={data} />\n          <Chart data={data} country={country} />\n          <CountryPicker handleCountryChange={this.handleCountryChange} />\n        </div>\n\n        <div className={styles.copywrite}>\n          <CopyWrite data={data} />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\",\"copywrite\":\"App_copywrite__c9fBt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","module.exports = __webpack_public_path__ + \"static/media/image.e315501c.jpg\";"],"sourceRoot":""}